<!DOCTYPE html>
<html>
  <head>
    <% include ../partials/header.ejs %>
    <style type="text/css">
      body {
        margin: 0px;
        background-color: #000000;
        overflow: hidden;
      }
    </style>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r73/three.min.js"></script>\
    <script src=""></script>
  </head>
  <body>
    <script>
      var camera, scene, renderer;
      
      var jumpkeyP1 = false, crouchkeyP1 = false,
        leftkeyP1 = false, rightkeyP1 = false,
        punchkeyP1 = false, kickkeyP1 = false,
        dashkeyP1 = false, blockkeyP1 = false, grabkeyP1 = false,
        
        jumpkeyP2 = false, crouchkeyP2 = false,
        leftkeyP2 = false, rightkeyP2 = false,
        punchkeyP2 = false, kickkeyP2 = false,
        dashkeyP2 = false, blockkeyP2 = false, grabkeyP2 = false,
      
        jumpCodeP1 = 38, crouchCodeP1 = 40,
        leftCodeP1 = 37, rightCodeP1 = 39,
        punchCodeP1 = 80, kickCodeP1 = 219
        dashCodeP1 = 73, blockCodeP1 = 221, grabCodeP1 = 79,
        
        jumpCodeP2 = 87, crouchCodeP2 = 83,
        leftCodeP2 = 65, rightCodeP2 = 68,
        punchCodeP2 = 82, kickCodeP2 = 84
        dashCodeP2 = 89, blockCodeP2 = 71, grabCodeP2 = 72; 
      var floorlevel = -500; // y value that represents the floor of the level
      var leftlevelwall = -1500; // x value that represents left bounding edge of the level
      var rightlevelwall = 1500; // x value that represents right bounding edge of the level
      
      var player1, player2;
      init();
      animate();
      
      function Character(playernumber)
      {
        var state = "jump";
        
        var texture = THREE.ImageUtils.loadTexture( 'crate.gif' );
        var standimage = new THREE.PlaneGeometry( 200, 200, 200 );
        var blockimage= new THREE.CircleGeometry( 100, 512); // 1 segment makes a triangle
        var material = new THREE.MeshBasicMaterial( { map: texture } );
        
        var mesh = new THREE.Mesh( standimage, material );
        scene.add( mesh );
        
        var walkspeed = 4; //speed of horizontal movement
        var runspeed = 10; // additional horizontal speed when the run button is held
        var jumpspeed = 30;
        var yvelocity = 0;
        var gravity = 2;

        if (true) {
          var something = 1;
        } else {
          var something = 2;
        }

        for (var i = 0; i < 10; i++) {

        }

        console.log(something);
        
        this.update = function()
        {
          
          mesh.position.y+=yvelocity;
          yvelocity-=gravity;
            
          if(mesh.position.y<=floorlevel)//minimum y position is floorlevel, end falling
          {
            mesh.position.y=floorlevel;
            yvelocity=0;
            if(state=="jump")
            state="stand";
          }
          
          if(playernumber==1)
          {
            moveP1();
            blockP1();
          }
          else
          moveP2();
          
          
        }
        
        var blockP1 = function()
        {
          if(blockkeyP1==true)
          {
            if(state=="stand")
            {
              state="block";
              mesh.geometry=blockimage;
            }
          }
          else
          {
            if(state=="block")
            {
              state="stand";
              mesh.geometry=standimage;
            }
          }
        }
        
        var moveP1 = function()
        {
          if(leftkeyP1==true && mesh.position.x>leftlevelwall)
          mesh.position.x-=walkspeed + runspeed*dashkeyP1;
          
          if(rightkeyP1==true && mesh.position.x<rightlevelwall)
          mesh.position.x+=walkspeed + runspeed*dashkeyP1;
          
          if(jumpkeyP1==true && state=="stand")
          {
            state="jump";
            yvelocity=jumpspeed;
          }
          
          //if(downkeyP1==true)
          //mesh.position.y-=2;
        }
        
        var moveP2 = function()
        {
          if(leftkeyP2==true && mesh.position.x>leftlevelwall)
          mesh.position.x-=walkspeed + runspeed*dashkeyP2;
          
          if(rightkeyP2==true && mesh.position.x<rightlevelwall)
          mesh.position.x+=walkspeed + runspeed*dashkeyP2;
          
          if(jumpkeyP2==true && state=="stand")
          {
            state="jump";
            yvelocity=jumpspeed;
          }
          
          //if(downkeyP2==true)
          //mesh.position.y-=2;
        }
      }
      function init() {
        camera = new THREE.PerspectiveCamera( 60, window.innerWidth / window.innerHeight, 1, 2100 );
        camera.position.z = 1500;
        cameraOrtho = new THREE.OrthographicCamera( - window.innerWidth / 2, window.innerWidth / 2, window.innerHeight / 2, - window.innerHeight / 2, 1, 10 );
        cameraOrtho.position.z = 10;
        scene = new THREE.Scene();
        renderer = new THREE.WebGLRenderer();
        renderer.setPixelRatio( window.devicePixelRatio );
        renderer.setSize( window.innerWidth, window.innerHeight );
        document.body.appendChild( renderer.domElement );
        window.addEventListener( 'resize', onWindowResize, false );
        
        window.addEventListener('keydown', KeyPressDown, false);
        window.addEventListener('keyup', KeyPressUp, false);
        
        player1 = new Character(1);
        player2 = new Character(2);
      }
      function onWindowResize()
      {
        camera.aspect = window.innerWidth / window.innerHeight;
        camera.updateProjectionMatrix();
        renderer.setSize( window.innerWidth, window.innerHeight );
      }
      
      function KeyPressDown(event)
      {
        event.preventDefault();
        
        if(event.keyCode==jumpCodeP1)
        jumpkeyP1 = true;
        
        if(event.keyCode==crouchCodeP1)
        crouchkeyP1 = true;
        
        if(event.keyCode==leftCodeP1)
        leftkeyP1 = true;
        
        if(event.keyCode==rightCodeP1)
        rightkeyP1 = true;
        
        if(event.keyCode==punchCodeP1)
        punchkeyP1 = true;
        
        if(event.keyCode==kickCodeP1)
        kickkeyP1 = true;
        
        if(event.keyCode==dashCodeP1)
        dashkeyP1 = true;
        
        if(event.keyCode==blockCodeP1)
        blockkeyP1 = true;
        
        if(event.keyCode==grabCodeP1)
        grabkeyP1 = true;
        
        if(event.keyCode==jumpCodeP2)
        jumpkeyP2 = true;
        
        if(event.keyCode==crouchCodeP2)
        crouchkeyP2 = true;
        
        if(event.keyCode==leftCodeP2)
        leftkeyP2 = true;
        
        if(event.keyCode==rightCodeP2)
        rightkeyP2 = true;
        
        if(event.keyCode==punchCodeP2)
        punchkeyP2 = true;
        
        if(event.keyCode==kickCodeP2)
        kickkeyP2 = true;
        
        if(event.keyCode==dashCodeP2)
        dashkeyP2 = true;
        
        if(event.keyCode==blockCodeP2)
        blockkeyP2 = true;
        
        if(event.keyCode==grabCodeP2)
        grabkeyP2 = true;
      }
      
      function KeyPressUp(event)
      {
        event.preventDefault();
        
        //console.log(event.keyCode);
        
        if(event.keyCode==jumpCodeP1)
        jumpkeyP1 = false;
        
        if(event.keyCode==crouchCodeP1)
        crouchkeyP1 = false;
        
        if(event.keyCode==leftCodeP1)
        leftkeyP1 = false;
        
        if(event.keyCode==rightCodeP1)
        rightkeyP1 = false;
        
        if(event.keyCode==punchCodeP1)
        punchkeyP1 = false;
        
        if(event.keyCode==kickCodeP1)
        kickkeyP1 = false;
        
        if(event.keyCode==dashCodeP1)
        dashkeyP1 = false;
        
        if(event.keyCode==blockCodeP1)
        blockkeyP1 = false;
        
        if(event.keyCode==grabCodeP1)
        grabkeyP1 = false;
        
        if(event.keyCode==jumpCodeP2)
        jumpkeyP2 = false;
        
        if(event.keyCode==crouchCodeP2)
        crouchkeyP2 = false;
        
        if(event.keyCode==leftCodeP2)
        leftkeyP2 = false;
        
        if(event.keyCode==rightCodeP2)
        rightkeyP2 = false;
        
        if(event.keyCode==punchCodeP2)
        punchkeyP2 = false;
        
        if(event.keyCode==kickCodeP2)
        kickkeyP2 = false;
        
        if(event.keyCode==dashCodeP2)
        dashkeyP2 = false;
        
        if(event.keyCode==blockCodeP2)
        blockkeyP2 = false;
        
        if(event.keyCode==grabCodeP2)
        grabkeyP2 = false;
      }
      function animate()
      {
        player1.update();
        var player1Attacked = player1.attack();
        if (player1Attacked) {
          var score = player2.defend(player1Attacked);
          player1.assignScore(score);
        }
        player2.update();
        requestAnimationFrame( animate );
        renderer.render( scene, camera );
      }
    </script>
  </body>
</html>